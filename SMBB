//@version=5
indicator(shorttitle="BBM", title="BBM", overlay=true, timeframe="", timeframe_gaps=true)
length = input.int(21, minval=1)
src = input(close, title="Source")
mult = input.float(2.618, minval=0.001, maxval=50, title="StdDev")
basis = ta.sma(src, length)
dev = mult * ta.stdev(src, length)
upper = basis + dev
lower = basis - dev
offset = input.int(0, "Offset", minval = -500, maxval = 500)
plot(basis, "Basis", color = color.orange, offset = offset, linewidth = 2)
p1 = plot(upper, "Upper", color = color.red , offset = offset, linewidth = 2)
p2 = plot(lower, "Lower", color = color.green, offset = offset, linewidth = 2)
//Moving  
lenFast = input.int(1, title='Length of Fast ', minval=1)
lenSlow = input.int(5, title='Length of Slow ', minval=1)
lenC = input.int(8, title='Length of  Curve', minval=1)
co(sFast, sSlow, lFast, lSlow, lC) =>
    fastC = ta.sma(sFast, lFast)
    slowC = ta.sma(sSlow, lSlow)
    cC = fastC + slowC
    ta.sma(cC, lC)
closeC = co(close, close, lenFast, lenSlow, lenC)
lineColor = closeC > closeC[1] ? color.green : color.red
c = plot(closeC / 2, title=' Curve', color=lineColor, linewidth=2, transp=0)
--------------------------------------------------------------------------------------------------------------------
//@version=5
indicator('S', overlay=true)
smaLength = input.int(5, "SMA Length", minval=0)
smaWidth = input.int(2, "SMA Width", minval=1)
sma = ta.sma(close, smaLength)
buySignal = close > sma and close[1] <= sma[1]
sellSignal = close < sma and close[1] >= sma[1]
smaColor = ta.change(sma) > 0 ? color.blue : color.purple
plot(sma, "SMA", smaColor, smaWidth)
plot(ta.sma(close, 200), "SMA200", color = color.white, linewidth = 2)
---------------------------------------------------------------------------------------------------------------------HACandles
//@version=5
indicator("7M", overlay = true)
SMA = input.int(7, "SMA", minval=1)
SMA200 = input.int(200, "SMA", minval=1)
plot(ta.sma(close, 7), "SMA", color = color.black, linewidth = 2)
plot(ta.sma(close, 200), "SMA200", color = color.blue, linewidth = 2)
---------------------------------------------------------------------------------------------------------------------
//@version=5
indicator(title="RSI", shorttitle = "rsi")
rsi =ta.rsi(close, 13)
plot(rsi, color = #065ca2)
//Hline 
hline(88.6, color=#f10707, linewidth=1)
hline(78.6, color=#e08611, linewidth=1)
hline(70.7, color=#f7cb06d8, linewidth=1)
hline(61.8, color=#f7b707, linewidth=1)
hline(50.0, color=#2c1414, linewidth=1)
hline(38.2, color=#0be412, linewidth=1)
hline(23.6, color=#058f09, linewidth=1)
RSI = input.int(13, "RSI Length", minval=1)
---------------------------------------------------------------------------------------------------------------------
//@version=5
indicator('STF', overlay=true)
lenFast = input.int(1, title='Length of Fast ', minval=1)
lenSlow = input.int(5, title='Length of Slow ', minval=1)
lenC = input.int(8, title='Length of  Curve', minval=1)
co(sFast, sSlow, lFast, lSlow, lC) =>
    fastC = ta.sma(sFast, lFast)
    slowC = ta.sma(sSlow, lSlow)
    cC = fastC + slowC
    ta.sma(cC, lC)
closeC = co(close, close, lenFast, lenSlow, lenC)
lineColor = closeC > closeC[1] ? color.green : color.red
c = plot(closeC / 2, title=' Curve', color=lineColor, linewidth=2, transp=0)
plot(ta.sma(close, 200), "SMA200", color = color.white, linewidth = 2)
---------------------------------------------------------------------------------------------------------------------HACandles
//@version=5
indicator("STDe")
delta = close - open
plot(delta)
S2 = ta.sma(delta,3)
color=S2 < 0 ? (S2 < S2[1] ? color.red : color.lime) : (S2 >= 0 ? (S2 > S2[1] ? color.lime : color.red) : na)
plot(S2, color=color, linewidth=2)
h0 = hline(0)
